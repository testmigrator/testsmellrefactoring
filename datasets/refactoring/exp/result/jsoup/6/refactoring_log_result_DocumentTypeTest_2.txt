Input Parameters:
Test Code:
 @Test public void testRoundTrip() {
        String base = "<!DOCTYPE html>";
        assertEquals("<!doctype html>", htmlOutput(base));
        assertEquals(base, xmlOutput(base));

        String publicDoc = "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">";
        assertEquals(publicDoc, htmlOutput(publicDoc));
        assertEquals(publicDoc, xmlOutput(publicDoc));

        String systemDoc = "<!DOCTYPE html SYSTEM \"exampledtdfile.dtd\">";
        assertEquals(systemDoc, htmlOutput(systemDoc));
        assertEquals(systemDoc, xmlOutput(systemDoc));

        String legacyDoc = "<!DOCTYPE html SYSTEM \"about:legacy-compat\">";
        assertEquals(legacyDoc, htmlOutput(legacyDoc));
        assertEquals(legacyDoc, xmlOutput(legacyDoc));
    }
Context: /org/jsoup/nodes/DocumentType
Smell List: ['Assertion_Roulette']
Smell Description List: ['Test Smell Typeï¼šAssertion Roulette\n\nFeature:\nA test method contains more than one assertion statement without an explanation/message (parameter in the assertion method).\n']
Refactoring DSL: ['RefactorRule:\n  SmellType: Assertion Roulette\n  Description: Add descriptive messages to assert statements to improve readability and maintainability.\n  Steps:\n    - Step:\n        Description: "Add descriptive message to each assert statement(except assertThat, assertThrows)."\n        Action: AddMessageToAssert\n        Parameters:\n          MessagePattern: "{assertionMessage}"\n  Example:\n    Before: |\n      @Test\n      public void T() {\n        stmt\n        assert_1\n        ...\n        assert_n\n        stmt\'\n      }\n    After: |\n      @Test\n      public void T() {\n        stmt\n        assert_1(..., "Descriptive message for assert statement")\n        ...\n        assert_n(..., "Descriptive message for assert statement")\n        stmt\'\n      }\n    Variables:\n      assertionMessage: "Descriptive message for assert statement"\n']
Checkpoints: ['[ ] All assert statements have been added with clear explanatory messages.\n']

Refactored Code: 
 
@Test
public void testRoundTrip() {
    String base = "<!DOCTYPE html>";
    assertEquals("<!doctype html>", htmlOutput(base), "HTML output for base DOCTYPE should be lowercase");
    assertEquals(base, xmlOutput(base), "XML output for base DOCTYPE should match input");

    String publicDoc = "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">";
    assertEquals(publicDoc, htmlOutput(publicDoc), "HTML output for public DOCTYPE should match input");
    assertEquals(publicDoc, xmlOutput(publicDoc), "XML output for public DOCTYPE should match input");

    String systemDoc = "<!DOCTYPE html SYSTEM \"exampledtdfile.dtd\">";
    assertEquals(systemDoc, htmlOutput(systemDoc), "HTML output for system DOCTYPE should match input");
    assertEquals(systemDoc, xmlOutput(systemDoc), "XML output for system DOCTYPE should match input");

    String legacyDoc = "<!DOCTYPE html SYSTEM \"about:legacy-compat\">";
    assertEquals(legacyDoc, htmlOutput(legacyDoc), "HTML output for legacy DOCTYPE should match input");
    assertEquals(legacyDoc, xmlOutput(legacyDoc), "XML output for legacy DOCTYPE should match input");
}


