Input Parameters:
Test Code:
 @Test
    public void testHeaderStartingWithLineSeparator0() {
        // related to Bugzilla #21215
        final Options options = new Options();
        final HelpFormatter formatter = new HelpFormatter();
        final String header = EOL + "Header";
        final String footer = "Footer";
        final StringWriter out = new StringWriter();
        formatter.printHelp(new PrintWriter(out), 80, "foobar", header, options, 2, 2, footer, true);
        //@formatter:off
        assertEquals(
                "usage: foobar" + EOL +
                EOL +
                "Header" + EOL +
                EOL +
                "Footer" + EOL,
                out.toString());
        //@formatter:on
    }
Context: /org/apache/commons/cli/HelpFormatter
Smell List: ['Sensitive_Equality']
Smell Description List: ['Test Smell Type：Sensitive Equality\n\nFeature:\nA test method invokes the toString() method of an object.\n']
Refactoring DSL: ['RefactorRule:\n  SmellType: Sensitive Equality\n  Description: "Avoid using the toString() method for comparing objects in assertions."\n  Steps:\n    - Step:\n        Description: "Extract the value returned by toString() into a separate variable for comparison. Ensure toString() does not directly appear in assertions."\n        Action: ReplaceMethodCall\n        Parameters:\n          TargetPattern: |\n            assertEquals({object1}.toString(), {expectedString});\n          ReplacementPattern: |\n            String actualValue = {object1}.toString();\n            assertEquals({expectedString}, actualValue);\n  Example:\n    Before: |\n      @Test\n      public void T() {\n        Object object1 = new Object();\n        assertEquals(object1.toString(), "expectedString");\n      }\n    After: |\n      @Test\n      public void T() {\n        Object object1 = new Object();\n        String actualValue = object1.toString();\n        assertEquals("expectedString", actualValue);\n      }\n']
Checkpoints: ['[ ] All instances of the ‘Sensitive Equality’ code smell have been refactored by directly comparing objects instead of using the toString() method for comparisons in tests, to enhance stability and avoid future failures due to changes in the toString() method’s implementation.\n']

Refactored Code: 
 
@Test
public void testHeaderStartingWithLineSeparator0() {
    // related to Bugzilla #21215
    final Options options = new Options();
    final HelpFormatter formatter = new HelpFormatter();
    final String header = EOL + "Header";
    final String footer = "Footer";
    final StringWriter out = new StringWriter();
    formatter.printHelp(new PrintWriter(out), 80, "foobar", header, options, 2, 2, footer, true);
    //@formatter:off
    String expectedOutput = "usage: foobar" + EOL +
                            EOL +
                            "Header" + EOL +
                            EOL +
                            "Footer" + EOL;
    String actualOutput = out.toString();
    assertEquals(expectedOutput, actualOutput);
    //@formatter:on
}


