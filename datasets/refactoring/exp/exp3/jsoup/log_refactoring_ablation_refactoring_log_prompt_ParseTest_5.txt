asserts result: 
 ```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import static org.junit.jupiter.api.Assertions.*;
import static org.jsoup.Jsoup.parse;

class BaiduTest {

    private Document doc;
    @TempDir
    public Path tempDir;

    @BeforeEach
    void setUp() throws IOException {
        File in = tempDir.resolve("baidu-cn-home.html").toFile();
        Files.copy(getClass().getResourceAsStream("/htmltests/baidu-cn-home.html"), in.toPath());
        assertTrue(in.exists(), "File should exist");

        doc = parse(in, null, "http://www.baidu.com/");
    }

    @Test
    void testBaiduSubmitButton() {
        Element submit = doc.select("#su").first();
        assertNotNull(submit, "Submit button should be found");
        assertEquals("百度一下", submit.attr("value"), "Submit button value should be '百度一下'");

        submit = doc.select("input[value=百度一下]").first();
        assertNotNull(submit, "Submit button should be found by value");
        assertEquals("su", submit.id(), "Submit button ID should be 'su'");
    }

    @Test
    void testBaiduNewsLink() {
        Element newsLink = doc.select("a:contains(新)").first();
        assertNotNull(newsLink, "News link should be found");
        assertEquals("http://news.baidu.com", newsLink.absUrl("href"), "News link href should be 'http://news.baidu.com'");
    }

    @Test
    void testBaiduCharsetDetection() {
        assertEquals("GB2312", doc.outputSettings().charset().displayName(), "Document charset should be GB2312");

        doc.outputSettings().charset("ascii");
        assertEquals("<title>&#x767e;&#x5ea6;&#x4e00;&#x4e0b;&#xff0c;&#x4f60;&#x5c31;&#x77e5;&#x9053;      </title>",
                doc.select("title").outerHtml(), "Title outer HTML should be correctly encoded in ASCII");
    }
}
```

