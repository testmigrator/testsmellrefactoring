asserts result: 
 ```java
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.assertThrows;
import static org.junit.jupiter.api.Assertions.*;

class LegendGraphicTest {

    @Test
    public void testCloningCreatesDifferentInstance() throws CloneNotSupportedException {
        Rectangle r = new Rectangle(1, 2, 3, 4);
        LegendGraphic g1 = new LegendGraphic(r, Color.BLACK);
        Line2D l = new Line2D.Double(1.0, 2.0, 3.0, 4.0);
        g1.setLine(l);
        LegendGraphic g2 = CloneUtils.clone(g1);

        assertNotSame(g1, g2, "Cloned object should be a different instance");
    }

    @Test
    public void testCloningPreservesClassType() throws CloneNotSupportedException {
        Rectangle r = new Rectangle(1, 2, 3, 4);
        LegendGraphic g1 = new LegendGraphic(r, Color.BLACK);
        Line2D l = new Line2D.Double(1.0, 2.0, 3.0, 4.0);
        g1.setLine(l);
        LegendGraphic g2 = CloneUtils.clone(g1);

        assertSame(g1.getClass(), g2.getClass(), "Cloned object should have the same class type");
    }

    @Test
    public void testCloningProducesEqualObjects() throws CloneNotSupportedException {
        Rectangle r = new Rectangle(1, 2, 3, 4);
        LegendGraphic g1 = new LegendGraphic(r, Color.BLACK);
        Line2D l = new Line2D.Double(1.0, 2.0, 3.0, 4.0);
        g1.setLine(l);
        LegendGraphic g2 = CloneUtils.clone(g1);

        assertEquals(g1, g2, "Cloned object should be equal to the original object");
    }

    @Test
    public void testCloningEnsuresIndependence() throws CloneNotSupportedException {
        Rectangle r = new Rectangle(1, 2, 3, 4);
        LegendGraphic g1 = new LegendGraphic(r, Color.BLACK);
        Line2D l = new Line2D.Double(1.0, 2.0, 3.0, 4.0);
        g1.setLine(l);
        LegendGraphic g2 = CloneUtils.clone(g1);

        l.setLine(4.0, 3.0, 2.0, 1.0);

        assertNotEquals(g1, g2, "Modifying the line of the original object should not affect the cloned object");
    }

    @Test
    public void testCloneThrowsCloneNotSupportedExceptionWhenNotSupported() {
        assertThrows(CloneNotSupportedException.class, () -> {
            Rectangle r = new Rectangle(1, 2, 3, 4);
            LegendGraphic g1 = new LegendGraphic(r, Color.BLACK);
            Line2D l = new Line2D.Double(1.0, 2.0, 3.0, 4.0);
            g1.setLine(l);
            CloneUtils.clone(g1);
        }, "CloneNotSupportedException should be thrown if cloning is not supported");
    }
}
```

