asserts result: 
 ```java
import static org.junit.jupiter.api.Assertions.*;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.*;

import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonToken;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;

import java.io.IOException;
import java.io.StringReader;

public class JsonReaderTest {

    private JsonReader reader;

    @BeforeEach
    public void setUp() throws IOException {
        String json = "[-0.0,1.0,1.7976931348623157E308,4.9E-324,0.0,0.00,-0.5,2.2250738585072014E-308,3.141592653589793,2.718281828459045,0,0.01,0e0,1e+0,1e-0,1e0000,1e00001,1e+1]";
        reader = new JsonReader(new StringReader(json));
        reader.beginArray();
    }

    @ParameterizedTest
    @ValueSource(doubles = {-0.0, 1.0, 1.7976931348623157E308, 4.9E-324, 0.0, 0.0, -0.5, 2.2250738585072014E-308, 3.141592653589793, 2.718281828459045, 0.0, 0.01, 0.0, 1.0, 1.0, 1.0, 10.0, 10.0})
    public void testNextDouble(double expectedValue) throws IOException {
        double actualValue = reader.nextDouble();
        assertThat(actualValue, equalTo(expectedValue), "Expected value: " + expectedValue + ", but was: " + actualValue);
    }

    @Test
    public void testEndArrayAndDocument() throws IOException {
        while (reader.hasNext()) {
            reader.skipValue();
        }
        reader.endArray();
        assertThat(reader.peek(), equalTo(JsonToken.END_DOCUMENT), "Expected END_DOCUMENT but found: " + reader.peek());
    }
}
```

