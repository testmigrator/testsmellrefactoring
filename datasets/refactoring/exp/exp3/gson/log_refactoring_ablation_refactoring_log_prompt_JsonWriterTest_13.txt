asserts result: 
 ```java
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

import com.google.gson.stream.JsonWriter;
import com.google.gson.stream.Strictness;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.io.StringWriter;

class JsonWriterTest {

    @Test
    public void testSingleTopLevelValueStrict() throws IOException {
        StringWriter stringWriter = new StringWriter();
        JsonWriter jsonWriter = new JsonWriter(stringWriter);
        jsonWriter.setStrictness(Strictness.STRICT);
        jsonWriter.beginArray().endArray();

        // Verify that JSON has only one top-level value
        IllegalStateException expected = assertThrows(
            IllegalStateException.class, 
            () -> jsonWriter.beginArray()
        );
        assertThat(expected.getMessage(), equalTo("JSON must have only one top-level value."));
    }
}
```

